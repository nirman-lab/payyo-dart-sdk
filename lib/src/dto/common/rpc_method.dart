enum RPCMethod {
  auth_createAutoLoginLink,
  auth_createTotp,
  declines_search,
  merchant_create,
  merchant_createUser,
  merchant_getDetails,
  merchant_getKycStatus,
  merchant_removeBankAccount,
  merchant_setBankAccount,
  merchant_update,
  paymentAgreement_getDetails,
  paymentAgreement_halt,
  paymentAgreement_resolve,
  paymentPage_getDetails,
  paymentPage_initialize,
  paymentPage_update,
  payoutStatements_search,
  termsOfService_accept,
  termsOfService_get,
  termsOfService_show,
  transaction_authorize,
  transaction_cancel,
  transaction_capture,
  transaction_getDccQuote,
  transaction_getDetails,
  transaction_getNextAction,
  transaction_initialize,
  transaction_initiate,
  transaction_pay,
  transaction_refund,
  transaction_reverse,
  transaction_void,
  transactions_search,
  vault_makeReservation,
  vault_storeCreditCard,
}

const _RPCMethodEnumMap = {
  RPCMethod.auth_createAutoLoginLink: 'auth.createAutoLoginLink',
  RPCMethod.auth_createTotp: 'auth.createTotp',
  RPCMethod.declines_search: 'declines.search',
  RPCMethod.merchant_create: 'merchant.create',
  RPCMethod.merchant_createUser: 'merchant.createUser',
  RPCMethod.merchant_getDetails: 'merchant.getDetails',
  RPCMethod.merchant_getKycStatus: 'merchant.getKycStatus',
  RPCMethod.merchant_removeBankAccount: 'merchant.removeBankAccount',
  RPCMethod.merchant_setBankAccount: 'merchant.setBankAccount',
  RPCMethod.merchant_update: 'merchant.update',
  RPCMethod.paymentAgreement_getDetails: 'paymentAgreement.getDetails',
  RPCMethod.paymentAgreement_halt: 'paymentAgreement.halt',
  RPCMethod.paymentAgreement_resolve: 'paymentAgreement.resolve',
  RPCMethod.paymentPage_getDetails: 'paymentPage.getDetails',
  RPCMethod.paymentPage_initialize: 'paymentPage.initialize',
  RPCMethod.paymentPage_update: 'paymentPage.update',
  RPCMethod.payoutStatements_search: 'payoutStatements.search',
  RPCMethod.termsOfService_accept: 'termsOfService.accept',
  RPCMethod.termsOfService_get: 'termsOfService.get',
  RPCMethod.termsOfService_show: 'termsOfService.show',
  RPCMethod.transaction_authorize: 'transaction.authorize',
  RPCMethod.transaction_cancel: 'transaction.cancel',
  RPCMethod.transaction_capture: 'transaction.capture',
  RPCMethod.transaction_getDccQuote: 'transaction.getDccQuote',
  RPCMethod.transaction_getDetails: 'transaction.getDetails',
  RPCMethod.transaction_getNextAction: 'transaction.getNextAction',
  RPCMethod.transaction_initialize: 'transaction.initialize',
  RPCMethod.transaction_initiate: 'transaction.initiate',
  RPCMethod.transaction_pay: 'transaction.pay',
  RPCMethod.transaction_refund: 'transaction.refund',
  RPCMethod.transaction_reverse: 'transaction.reverse',
  RPCMethod.transaction_void: 'transaction.void',
  RPCMethod.transactions_search: 'transactions.search',
  RPCMethod.vault_makeReservation: 'vault.makeReservation',
  RPCMethod.vault_storeCreditCard: 'vault.storeCreditCard',
};

String rpcMethodStringValue(RPCMethod rpcMethod) {
  String val = _RPCMethodEnumMap[rpcMethod];
  if (val == null) {
    throw Exception('no value found in _RPCMethodEnumMap for $rpcMethod');
  }

  return val;
}
